' Zork I, spring 2024
@startuml
skinparam classAttributeIconSize 0
skinparam padding 1
skinparam nodesep 100
skinparam link {
    padding 50
}
hide circle

class +Dungeon {
    +Dungeon(entry : Room, title : String)
    +getEntry() : Room
    +getTitle() : String
    +add(room : Room) : void
    +getRoom(roomName : String) : Room
    -title : String
}

class +Room {
    -name : String
    -desc : String
    +Room(name: String)
    +getName() : String
    +setDesc(desc: String) : void
    ~describe() : String
    ~leaveBy(dir: String) : Room
    +addExit(exit: Exit) : void
}
"+Dungeon" o-- "-rooms *" "+Room"
note on link
    Hashtable
end note
'"+Dungeon" --> "-entry 1" "+Room"   runs up against -rooms association

class +Exit {
    -dir : String
    +Exit(dir : String, src : Room, dest : Room)
    ~describe() : String
    +getDir() : String
    +getSrc() : Room
    +getDest() : Room
}
"+Room" *-- "-exits *" "+Exit"
"+Room" "-src 1" <-- "+Exit"
"+Room" "-dest 1" <-- "+Exit"


class Command {
    -dir : String
    ~Command(dir : String)
    ~execute() : String
}
note right of Command::dir
    Temporary; to be made more general in Zork III
end note
"Command" ..> "+Room" : <<uses>>

class CommandFactory {
    {static} +instance() : CommandFactory
    -CommandFactory()
    ~parse(commandString : String) : Command
}
"CommandFactory" *-->  "-theInstance" "CommandFactory"
"CommandFactory" ..> "Command" : <<instantiates>>

class GameState {
    {static} +instance() : GameState
    -GameState()
    +initialize(dungeon : Dungeon) : void
    +getAdventurersCurrentRoom() : Room
    +setAdventurersCurrentRoom(room : Room) : void
    +getDungeon() : Dungeon
    ~visit(room : Room) : void
    ~hasBeenVisited(room : Room) : boolean
}
"GameState" *-->  "-theInstance" "GameState"
"Command" ..> "GameState" : <<uses>>
"GameState" --> "-currentRoom 1" "+Room"
"GameState" --> "1" "+Dungeon"
"GameState" --> "-visited *" "+Room"
note on link
    HashSet
end note

class Interpreter {
    {static} +main(args : String[])
    {static} -buildSampleDungeon() : Dungeon
}
note right of Interpreter::buildSampleDungeon
    Temporary; will hydrate from file in Zork II
end note
"Interpreter" ..> "GameState" : <<uses>>
"Interpreter" ..> "CommandFactory" : <<uses>>
"Interpreter" ..> "Command" : <<uses>>

'Feeble layout attempts
"+Exit" -[hidden]d "+Room"
"+Dungeon" -[hidden]r "+Room"
"Interpreter" -[hidden]r "+Dungeon"
@enduml
