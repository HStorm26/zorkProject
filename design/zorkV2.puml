' Zork II, spring 2024
@startuml
skinparam classAttributeIconSize 0
skinparam padding 1
skinparam nodesep 100
skinparam link {
    padding 50
}
hide circle

class +Dungeon {
    -filename : String
    +Dungeon(entry : Room, title : String)
    +Dungeon(filename: String)
    +getEntry() : Room
    +getTitle() : String
    +add(room : Room) : void
    +getRoom(roomName : String) : Room
    +getFilename() : String
    -title : String
}
class +IllegalDungeonFormatException {
    +IllegalDungeonFormatException(errorMsg: String)
}
"+Dungeon" ..> "+IllegalDungeonFormatException" : <<instantiates>>

class +Room {
    -name : String
    -desc : String
    +Room(name: String)
    +Room(s: Scanner)
    +getName() : String
    +setDesc(desc: String) : void
    ~describe() : String
    ~leaveBy(dir: String) : Room
    +addExit(exit: Exit) : void
}
"+Dungeon" o-- "-rooms *" "+Room"
note on link
    Hashtable
end note
"+Dungeon" --> "-entry 1" "+Room"

class +NoRoomException {
}
"+Room" ..> "+NoRoomException" : <<instantiates>>

class +Exit {
    -dir : String
    +Exit(dir: String, src: Room, dest: Room)
    +Exit(s: Scanner)
    ~describe() : String
    +getDir() : String
    +getSrc() : Room
    +getDest() : Room
}
"+Room" *-- "-exits *" "+Exit"
"+Room" "-src 1" <-- "+Exit"
"+Room" "-dest 1" <-- "+Exit"

class +NoExitException {
}
"+Exit" ..> "+NoExitException" : <<instantiates>>

class Command {
    -dir : String
    ~Command(dir : String)
    ~execute() : String
}
"Command" ..> "+Room" : <<uses>>

class CommandFactory {
    {static} +instance() : CommandFactory
    -CommandFactory()
    ~parse(commandString : String) : Command
}
"CommandFactory" *-->  "-theInstance" "CommandFactory"
"CommandFactory" ..> "Command" : <<instantiates>>

class GameState {
    {static} +instance() : GameState
    -GameState()
    +initialize(dungeon : Dungeon) : void
    +getAdventurersCurrentRoom() : Room
    +setAdventurersCurrentRoom(room : Room) : void
    +getDungeon() : Dungeon
    +setDungeon(d : Dungeon) : void
    ~visit(room : Room) : void
    ~hasBeenVisited(room : Room) : boolean
    ~store(saveName : String) : void
    ~restore(filename : String) : void
}
"GameState" *-->  "-theInstance" "GameState"
"Command" ..> "GameState" : <<uses>>
"GameState" --> "-currentRoom 1" "+Room"
"GameState" --> "1" "+Dungeon"
"GameState" --> "-visited *" "+Room"
note on link
    HashSet
end note
class "+IllegalSaveFormatException" {
    +IllegalSaveFormatException(errorMsg: String)
}
"GameState" ..> "+IllegalSaveFormatException" : <<instantiates>>
"+Room" ..> "GameState" : <<uses>>

class Interpreter {
    {static} +main(args : String[])
}
"Interpreter" ..> "GameState" : <<uses>>
"Interpreter" ..> "CommandFactory" : <<uses>>
"Interpreter" ..> "Command" : <<uses>>

'Feeble layout attempts
'"+Exit" -[hidden]d "+Room"
'"+Dungeon" -[hidden]r "+Room"
'"Interpreter" -[hidden]r "+Dungeon"
@enduml
